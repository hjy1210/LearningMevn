 type Dish {
     id:ID,
     name: String,
     country: String,
     tasty: Boolean,
     chefid: String,
     chef:Chef
 }
 type Chef {
     id:ID,
     name: String,
     rating: Float,
     dishes: [Dish]
 }
  type Query {
    message: String,
    dishes:[Dish],
    chefs:[Chef],
    chef(id:ID):Chef,
    dish(id:ID):Dish,
    getDishes(chefid:String):[Dish]
  }
  input ChefInput {
   name:String,
   rating:Float,
  }
  input DishInput {
    name:String,
    country:String,
    tasty:Boolean,
    chefid:String
  }
  type Mutation {
    addDish(input: DishInput):Dish,
    updateDish(id:ID, input:DishInput):Dish,
    deleteDish(id:ID):Dish
    addChef(input: ChefInput):Chef,
    updateChef(id:ID, input:ChefInput):Chef,
    deleteChef(id:ID):Chef
  }

  schema {
    query: Query,
    mutation: Mutation
  }